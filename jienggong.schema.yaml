# Rime schema
# encoding: utf-8

schema:
  schema_id: jienggong
  name: '阳江话拼音'
  version: "2024.08.26"
  author:
    - Lumen <lumen01@qq.com>

  description: |-
    阳江话方言拼音方案
      - https://github.com/Lumen01/rime-jienggong-cantonese
    特点：
      - 支持声调显示及输入
      - 使用 pinyin_simp 作为普通话反查
      - 添加 easy_en 实现中英混输

  dependencies:
    - pinyin_simp
    - easy_en

switches:
  - name: ascii_mode
    states: [ 中文, 英文 ]
  - name: simplification
    states: [ 简体, 繁体]
    reset: 0
  - name: emoji_suggestion
    states: [ 关Emoji, 开Emoji ]
    reset: 1
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: mandarin_dict
    states: [ 阳江话, 普通话 ]
    reset: 1
  - name: ascii_punct
    states: [ 。，, ．， ]
  - name: extended_charset
    states: [ 常用, 增廣 ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - affix_segmentor@reverse_lookup
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - script_translator
    - table_translator@custom_phrase
    - lua_translator@date_translator        # librime-lua 输入动态时间和日期
    - table_translator@english
  filters:
    - simplifier@simplification
    - simplifier@emoji_suggestion
    - simplifier@mandarin_dict
    - reverse_lookup_filter@reverse_lookup
    - simplifier
    - uniquifier
    - lua_filter@*en_spacer

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba
  delimiter: " '"
  algebra:
    # 取消以下一行的注释, 将 gw-, kw- 并入 g, k, 「瓜」读作「家」, 「夸」读作「卡」
    #- derive/^(g|k)w([aeiou])/$1$2/

    # 对于讲海话个人, 根据习惯, 遇到 [sl] 音都发 [s], 因此
    # 取消下一行注释, 将 sl 并入 s, 「星」读作「声」, 「姓」读作「胜」
    #- derive/^sl([aeiou])/s$1/    

    # 取消下一行注释, 优化 x -> sl, 输入[x] 可以得到输入 [sl] 的效果，提升输入效率
    - derive/^sl([aeiou])/x$1/    

    - derive/^j([aeiou])/y$1/     # 容错 j -> y
    - derive/aa(?=\d)/a/          # 容错
    - derive/\d//                 # 忽略声调

    - abbrev/^([a-z]).+$/$1/      # 首字母简拼

    - xform/1/q/                  # 阴平
    - xform/2/r/                  # 阳平
    - xform/3/v/                  # 上声
    - xform/4/qq/                 # 阴去
    - xform/5/rr/                 # 阳去

translator:
  dictionary: jienggong
  # 设定用戶词典类型，可设tabledb〔文本〕或userdb〔二进制〕
  #db_class: userdb
  enable_charset_filter: true
  spelling_hints: 9                   # 将该处改作 0，可以去除候选字后面个拼音提示
  enable_user_dict: true              # 将该处改作 true，会根据你个输入习惯自动调整候选词个顺序
  enable_sentence: true               # 将该处改作 true，输入长句
  encode_commit_history: false        # 将该处改作 true，同时 enable_user_dict 也系 true，可以学习你个历史输入词语
  preedit_format:
    - xform/([aeioumngptk])qq/${1}4/
    - xform/([aeioumngptk])rr/${1}5/
    - xform/([aeioumngptk])q/${1}1/
    - xform/([aeioumngptk])r/${1}2/
    - xform/([aeioumngptk])v/${1}3/

custom_phrase:
  dictionary: ""
  user_dict: custom_phrase          # 可以修改这里，改成自己的 txt 文件
  db_class: stabledb                # 只读数据库，无法动态调频；设为 tabledb 可以动态调频
  enable_completion: false          # 补全提示
  enable_sentence: false            # 禁止造句
  initial_quality: 1                # custom_phrase 的权重

reverse_lookup:
  tag: reverse_lookup
  dictionary: pinyin_simp
  prefix: "`"
  suffix: "'"
  tips: '〔普通话〕'

  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/
    - xform/^`//              # 去除反查符号`

english:
  dictionary: easy_en
  spelling_hints: 9
  enable_completion: true
  enable_sentence: false
  initial_quality: -3

simplifier:
  opencc_config: s2t.json
  opencc_name: simplification

emoji_suggestion:
  opencc_config: emoji.chs.json
  option_name: emoji_suggestion
  tips: all

mandarin_dict:
  opencc_config: jienggong_dict.json
  option_name: mandarin_dict
  tips: all

punctuator:
  import_preset: symbols

key_binder:
  import_preset: default

recognizer:
  import_preset: default
  patterns:
    punct: "^/([0-9]0?|[a-z]+)$"
    reverse_lookup: "^`[a-z]*'?$" # 反查词条的正则
